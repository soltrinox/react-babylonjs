{"version":3,"sources":["webpack://ReactBabylon3D/webpack/universalModuleDefinition","webpack://ReactBabylon3D/webpack/bootstrap","webpack://ReactBabylon3D/./src/babylonjs/helpers/property-setters.js","webpack://ReactBabylon3D/./src/babylonjs/helpers/property-transformers.js","webpack://ReactBabylon3D/./src/babylonjs/helpers/property-disposers.js","webpack://ReactBabylon3D/./src/babylonjs/helpers/functional.js","webpack://ReactBabylon3D/./src/index.js","webpack://ReactBabylon3D/./src/react-api/index.js","webpack://ReactBabylon3D/external \"react-reconciler\"","webpack://ReactBabylon3D/./src/react-api/babylonjs-renderer.js","webpack://ReactBabylon3D/./src/react-api/node.js","webpack://ReactBabylon3D/./src/babylonjs/helpers/component-manager.js","webpack://ReactBabylon3D/./src/babylonjs/elements.js","webpack://ReactBabylon3D/./src/babylonjs/helpers/composer.js","webpack://ReactBabylon3D/./src/babylonjs/helpers/utils.js","webpack://ReactBabylon3D/./src/babylonjs/helpers/property-updater.js","webpack://ReactBabylon3D/./src/babylonjs/components/component-scene.js","webpack://ReactBabylon3D/./src/babylonjs/components/component-mesh-box.js","webpack://ReactBabylon3D/./src/babylonjs/components/component-mesh-ground.js","webpack://ReactBabylon3D/./src/babylonjs/components/component-mesh-cylinder.js","webpack://ReactBabylon3D/./src/babylonjs/components/component-mesh-extrude-shape.js","webpack://ReactBabylon3D/./src/babylonjs/components/component-mesh-lines.js","webpack://ReactBabylon3D/./src/babylonjs/components/component-mesh-sphere.js","webpack://ReactBabylon3D/./src/babylonjs/components/component-free-camera.js","webpack://ReactBabylon3D/./src/babylonjs/components/component-arc-rotate-camera.js","webpack://ReactBabylon3D/./src/babylonjs/components/component-hemispheric-light.js","webpack://ReactBabylon3D/./src/babylonjs/styles/style-shader-material.js","webpack://ReactBabylon3D/./src/babylonjs/styles/style-standard-material.js","webpack://ReactBabylon3D/./src/babylonjs/styles/style-texture.js","webpack://ReactBabylon3D/./src/babylonjs/styles/style-cube-texture.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__6__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","setters","propName","component","propertyFromComponent","getComponent","undefined","setFloat","setVector4","setTexture","newValue","apply","context","prevReturned","dispose","type","props","updateProps","elements","byType","logger","warn","needLastReturned","transformers","byPass","_","arrayOf","transformer","map","v","color3","_ref4","BABYLON","Function","Color3","concat","color4","_ref3","Color4","vector3","_ref","Vector3","vector4","_ref2","Vector4","disposers","lastValue","setter","fromPairs","arr","reduce","obj","_Object$assign","assign","Node","babylonJSRenderer","componentManager","createRenderer","canvas","engine","Engine","scene","Scene","rootNode","console","rootContainer","createContainer","startLoop","loopStarted","runRenderLoop","render","Component","updateContainer","ReactFiberReconciler","BabylonjsRenderer","debug","injectIntoDevTools","bundleType","version","rendererPackageName","ErrorNotImplemented","Error","_notImplemented","DEBUGGER","fn","getPublicInstance","instance","getRootHostContext","container","getChildHostContext","parentContext","appendChild","parentInstance","child","removeChild","commitUpdate","updatePayload","oldProps","newProps","internalInstanceHandle","cmp","appendChildToContainer","removeChildFromContainer","insertBefore","beforeChild","opts","supportsMutation","now","Date","useSyncScheduling","mutation","commitMount","insertInContainerBefore","createInstance","rootContainerInstance","hostContext","node","finalizeInitialChildren","appendInitialChild","prepareUpdate","prepareForCommit","resetAfterCommit","shouldSetTextContent","resetTextContent","createTextInstance","commitTextUpdate","arguments","length","_typeof","this","children","push","parent","index","indexOf","splice","_lastId","_cache","validateId","componentId","id","parseInt","newId","toString","save","compose","propertyUpdater","createComponent","styles","standardMaterial","shaderMaterial","texture","cubeTexture","clone","equals","definition","updater","validateComponent","requireNewComponent","propsDefinitions","defs","keys","filter","def","newComponentRequired","acc","currentProps","prop","shouldCreateNewComponent","creator","providedProps","baseComponent","internalCreateComponent","tmpProps","values","createNewComponent","Array","isArray","slice","valueOf","newObj","a","b","propsDefinition","forEach","_propsDefinition$prop","propValue","keyComponent","getValue","clearColor","ambientColor","box","Mesh","CreateBox","size","infiniteDistance","width","height","subdivisions","material","position","transform","ground","CreateGround","diameterTop","diameterBottom","tessellation","arc","sideOrientation","faceColors","faceUV","frontUVs","backUVs","rotation","sphere","getOpts","MeshBuilder","CreateCylinder","shape","path","scale","cap","invertUV","extrudeShape","ExtrudeShape","points","colors","color","useVertexColor","CreateLines","CreateSphere","segments","diameter","freeCamera","FreeCamera","activeCamera","defaultTarget","setTarget","target","attachControl","detachControl","arcRotateCamera","ArcRotateCamera","alpha","beta","radius","setPosition","hemisphericLight","HemisphericLight","intensity","superTypes","ShaderMaterial","shaderPath","attributes","from","uniforms","diffuseColor","backFaceCulling","boxSize","edgeColor","hue","tileTex","StandardMaterial","specularColor","emissiveColor","reflectionTexture","diffuseTexture","Texture","url","CubeTexture","coordinatesMode"],"mappings":"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","file":"react-babylon-3d.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react-reconciler\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ReactBabylon3D\", [\"react-reconciler\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactBabylon3D\"] = factory(require(\"react-reconciler\"));\n\telse\n\t\troot[\"ReactBabylon3D\"] = factory(root[\"react-reconciler\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__6__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","const setters = {\n    property: propName => {\n        const property = (component, value) => (component[propName] = value);\n        return property;\n    },\n    propertyFromComponent: propName => {\n        const propertyFromComponent = (component, value) =>\n            (component[propName] = value ? value.getComponent() : undefined);\n        return propertyFromComponent;\n    },\n    setFloat: propName => {\n        const setFloat = (component, value) =>\n            component.setFloat(propName, value);\n        return setFloat;\n    },\n    setVector4: propName => {\n        const setVector4 = (component, value) =>\n            component.setVector4(propName, value);\n        return setVector4;\n    },\n    setTexture: propName => {\n        const setTexture = (component, value) => {\n            const newValue =\n                value && value.getComponent ? value.getComponent() : value;\n            component.setTexture(propName, newValue);\n        };\n        return setTexture;\n    },\n    apply: (component, value) => value(component),\n};\n\nmodule.exports = setters;\n","const vector3 = ({ BABYLON }, value) => new BABYLON.Vector3(...value);\nconst vector4 = ({ BABYLON }, value) => new BABYLON.Vector4(...value);\nconst color4 = ({ BABYLON }, value) => new BABYLON.Color4(...value);\nconst color3 = ({ BABYLON }, value) => new BABYLON.Color3(...value);\nconst byPass = (_, value) => value;\n// TODO: validate\n// const _enum = () => (_, value) => value;\n// TODO: include size\nconst arrayOf = transformer => (context, value) =>\n    value.map(v => transformer(context, v));\n\nconst component = (context, value, prevReturned) => {\n    if (!value) {\n        if (prevReturned) {\n            prevReturned.dispose();\n        }\n\n        return null;\n    }\n\n    const { type, props } = value;\n\n    if (prevReturned) {\n        prevReturned.updateProps(props);\n        return prevReturned;\n    }\n\n    if (!context.elements.byType[type]) {\n        context.logger.warn(`element <${type}> not found.`);\n        return;\n    }\n\n    return context.elements.byType[type](context, props);\n};\ncomponent.needLastReturned = true;\n\nconst transformers = {\n    // enum: _enum,\n    byPass,\n    arrayOf,\n    color3,\n    color4,\n    vector3,\n    vector4,\n    component,\n};\n\nmodule.exports = transformers;\n","const disposers = {\n    component: (component, lastValue, setter) => {\n        if (!lastValue) {\n            return;\n        }\n        setter(component, undefined);\n        lastValue.dispose();\n    },\n};\n\nmodule.exports = disposers;\n","const fromPairs = arr =>\n    arr.reduce((obj, [key, value]) => Object.assign(obj, { [key]: value }), {});\n\nmodule.exports = { fromPairs };\n","const { Node, babylonJSRenderer } = require(\"./react-api\");\nconst componentManager = require(\"./babylonjs/helpers/component-manager\");\nconst elements = require(\"./babylonjs/elements\");\n\nconst createRenderer = ({ BABYLON, canvas }) => {\n    const engine = new BABYLON.Engine(canvas, true);\n    const scene = new BABYLON.Scene(engine);\n    const rootNode = new Node(\"root\", {\n        BABYLON,\n        canvas,\n        componentManager: componentManager.create(),\n        elements,\n        engine,\n        scene,\n        logger: console,\n    });\n\n    const rootContainer = babylonJSRenderer.createContainer(rootNode);\n\n    const startLoop = (function() {\n        let loopStarted = false;\n        return () => {\n            if (!loopStarted) {\n                loopStarted = true;\n                engine.runRenderLoop(() => scene.render());\n            }\n        };\n    })();\n\n    const render = Component => {\n        babylonJSRenderer.updateContainer(Component, rootContainer, null, () =>\n            startLoop()\n        );\n    };\n\n    const dispose = () => {};\n\n    return {\n        render,\n        dispose,\n    };\n};\n\nmodule.exports = { createRenderer, elements };\n","const ReactFiberReconciler = require(\"react-reconciler\");\nconst BabylonjsRenderer = require(\"./babylonjs-renderer\");\nconst Node = require(\"./node.js\");\nconst logger = { debug: () => {} };\n\nconst babylonJSRenderer = ReactFiberReconciler(\n    BabylonjsRenderer({ Node, logger })\n);\n\nbabylonJSRenderer.injectIntoDevTools({\n    bundleType: 1, // 0 for PROD, 1 for DEV\n    version: \"0.2.0\", // version for your renderer\n    rendererPackageName: \"react-babylonjs-3d\", // package name\n});\n\nmodule.exports = {\n    babylonJSRenderer,\n    Node,\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","// 1. evetns\n// 1.1 warning message event doesn't exist\n// 1.2 not recreate the component if the handler hasn't changed\n// 2. compose properties\n// 3. re-creatiing babylon component?\n// 3.1 as it for now just throws an Error\n\n// const babylonjsFactoryComponent = require(\"./babylonjs-factory-component\");\n// const Node = require(\"./node\");\n\nclass ErrorNotImplemented extends Error {}\nconst _noop = () => () => {};\nconst _notImplemented = name => () => {\n    throw new ErrorNotImplemented(name);\n};\nconst DEBUGGER = (\n    fn,\n    // eslint-disable-next-line no-unused-vars\n    name\n) => (...args) => {\n    return fn(...args);\n};\n\nconst getPublicInstance = instance => instance;\nconst getRootHostContext = container => container.props;\nconst getChildHostContext = (\n    parentContext,\n    type /* : string */,\n    rootContainer\n) => Object.assign({}, parentContext, { type, rootContainer });\n\nconst createInstance = ({ /*logger,*/ Node }) =>\n    DEBUGGER((\n        type /* : string */,\n        props /* : Props */,\n        rootContainerInstance /* : Container */,\n        hostContext /* : {} */,\n        // eslint-disable-next-line no-unused-vars\n        internalInstanceHandle /* : Instance */ /* : Object */\n    ) => {\n        const node = new Node(type);\n\n        if (rootContainerInstance.props.elements.byType[type]) {\n            node.cmp = rootContainerInstance.props.elements.byType[type](\n                hostContext,\n                props\n            );\n        }\n\n        return node;\n    }, \"createInstance\");\n\nconst appendChild = DEBUGGER(\n    (\n        parentInstance /* : Instance  | Container*/,\n        child /* : void */ /* : Instance | TextInstance */\n    ) => parentInstance.appendChild(child),\n    \"appendChild\"\n);\n\nconst removeChild = DEBUGGER((\n    parentInstance /* : Instance */,\n    child /* : Instance  | TextInstance*/ /* : void */\n) => {\n    return parentInstance.removeChild(child);\n}, \"removeChild\");\n\nconst commitUpdate = DEBUGGER((\n    instance /* : Instance */,\n    updatePayload /* : Object */,\n    type /* : string */,\n    oldProps /* : Props */,\n    newProps /* : Props */,\n    // eslint-disable-next-line no-unused-vars\n    internalInstanceHandle /* : Object */\n) => /* : void */ {\n    instance.cmp.updateProps(updatePayload);\n}, \"commitUpdate\");\n\n// shouldn't matter, 'cause it's adding the scene to the root\nconst appendChildToContainer = DEBUGGER((\n    parentInstance /* : Container */,\n    // eslint-disable-next-line no-unused-vars\n    child /* : void */ /* : Instance | TextInstance*/\n) => {\n    return parentInstance.appendChild(child);\n}, \"appendChildToContainer\");\n\nconst removeChildFromContainer = DEBUGGER((\n    parentInstance /* : Container */,\n    // eslint-disable-next-line no-unused-vars\n    child /* : Instance  | TextInstance*/ /* : void */\n) => {\n    return parentInstance.removeChild(child);\n}, \"removeChildFromContainer\");\n\nconst insertBefore = DEBUGGER((\n    parentInstance /* : Instance */,\n    child /* : Instance | TextInstance*/,\n    // eslint-disable-next-line no-unused-vars\n    beforeChild /* : Instance | TextInstance*/ /* : void */\n) => {\n    // noop\n}, \"insertBefore\");\n\nconst Mutation = (/*{ logger }*/) => ({\n    appendChild,\n    removeChild,\n    commitMount(\n        instance /* : Instance */,\n        type /* : string */,\n        newProps /* : Props */,\n        // eslint-disable-next-line no-unused-vars\n        internalInstanceHandle /* : Object */\n    ) /* : void */ {\n    },\n    commitUpdate,\n    appendChildToContainer,\n    insertBefore,\n    insertInContainerBefore(\n        parentInstance /* : Container */,\n        child /* : Instance  | TextInstance*/,\n        // eslint-disable-next-line no-unused-vars\n        beforeChild /* : Instance | TextInstance*/\n    ) /* : void */ {\n    },\n    removeChildFromContainer,\n});\n\nconst BabylonJSRenderer = opts => ({\n    supportsMutation: true,\n    now: () => Date.now(),\n    useSyncScheduling: true,\n    mutation: Mutation(opts),\n    getRootHostContext,\n    getPublicInstance,\n    createInstance: createInstance(opts),\n    getChildHostContext,\n    commitUpdate,\n    appendChild,\n    removeChild,\n    appendChildToContainer,\n    commitMount() {},\n    removeChildFromContainer,\n    insertBefore,\n    // at this stage all children were created and already had the `finalizeInitialChildren` executed\n    // 1. when a component's created it's possible to set some default values\n    // 2. also some actions, such as setting focus\n    // 3. if it returns true, eventually it will trigger a commitMount\n    // 4. another thing(if not the most important) you should set the properties in your component\n    finalizeInitialChildren(\n        instance /* : Instance */,\n        type /* : string */,\n        props /* : Props */,\n        // eslint-disable-next-line no-unused-vars\n        rootContainerInstance /* : Container */\n    ) /* : boolean */ {\n        return true;\n    },\n    appendInitialChild: appendChild,\n\n    // decides if there is any update to be done\n    // if there is no change to apply, then just returns null\n    // otherwise to make your life easier, calculate what needs to be changed and return it\n    // it's result will be passed to `mutation.commitUpdate` as `updatePayload` (2nd parameter)\n    prepareUpdate(\n        instance /* : Instance */,\n        type /* : string */,\n        oldProps /* : Props */,\n        newProps /* : Props */,\n        rootContainerInstance /* : Container */,\n        // eslint-disable-next-line no-unused-vars\n        hostContext /* : {} */\n    ) /* : null  | Object*/ {\n        // if (arePropsEqual(oldProps, newProps)) {\n        //     return newProps;\n        // }\n        return newProps;\n    },\n    // **********************************\n    // hooks whenever an update happens\n    // **********************************\n    prepareForCommit: _noop(\"prepareForCommit\"),\n    resetAfterCommit: _noop(\"resetAfterCommit\"),\n\n    // **********************************\n    // as it doesn't support pure text content....\n    // **********************************\n    // eslint-disable-next-line no-unused-vars\n    shouldSetTextContent(\n        type /* : string */,\n        // eslint-disable-next-line no-unused-vars\n        props /* : Props*/\n    ) /*:  boolean*/ {\n        return false;\n    },\n    // eslint-disable-next-line no-unused-vars\n    resetTextContent: _notImplemented(\"resetTextContent\"),\n    // (instance /* : Instance*/) /*:  void*/ {\n    //     throw new ErrorNotImplemented();\n    // },\n\n    createTextInstance: _notImplemented(\"createTextInstance\"),\n    // (\n    //     text,\n    //     rootContainerInstance,\n    //     hostContext,\n    //     // eslint-disable-next-line no-unused-vars\n    //     internalInstanceHandle\n    // ) {\n    //     throw new ErrorNotImplemented();\n    // },\n\n    commitTextUpdate: _notImplemented(\"commitTextUpdate\"),\n    // (\n    //     textInstance /* : TextInstance */,\n    //     oldText /* : string */,\n    //     // eslint-disable-next-line no-unused-vars\n    //     newText /* : string */\n    // ) /* : void */ {\n    //     throw new ErrorNotImplemented();\n    // },\n    // **********************************\n    // **********************************\n});\n\nmodule.exports = BabylonJSRenderer;\n\n// // eslint-disable-next-line no-unused-vars\n// function processProps(\n//     instance /* : number */,\n//     props /* : Props*/\n// ) /*:  Object*/ {\n//     const propsPayload = {};\n//     for (let key in props) {\n//         if (key === \"children\") {\n//             // Skip special case.\n//             continue;\n//         }\n//         let value = props[key];\n//         if (typeof value === \"function\") {\n//             value = {\n//                 style: \"rt-event\",\n//                 event: key,\n//                 tag: instance,\n//             };\n//         }\n//         propsPayload[key] = value;\n//     }\n//     return propsPayload;\n// }\n\n// // eslint-disable-next-line no-unused-vars\n// function arePropsEqual(\n//     oldProps /* : Props */,\n//     newProps /* : Props*/\n// ) /*:  boolean*/ {\n//     for (let key in newProps) {\n//         if (key === \"children\") {\n//             // Skip special case.\n//             continue;\n//         }\n\n//         if (newProps[key] !== oldProps[key]) {\n//             return false;\n//         }\n//     }\n\n//     for (let key in oldProps) {\n//         if (key === \"children\") {\n//             // Skip special case.\n//             continue;\n//         }\n//         if (!(key in newProps)) {\n//             return false;\n//         }\n//     }\n//     return true;\n// }\n","function Node(type, props = {}) {\n    // Stores all the children\n    if (typeof type !== \"string\") {\n        throw new Error(`invalid type of Node [${typeof type}]`);\n    }\n\n    if (typeof props !== \"object\") {\n        throw new Error(`invalid type of props [${typeof props}]`);\n    }\n\n    this.type = type;\n    this.props = props;\n    this.children = [];\n\n    this.appendChild = function(child) {\n        this.children.push(child);\n        child.parent = this;\n    };\n\n    this.removeChild = function(child) {\n        const index = this.children.indexOf(child);\n        this.children.splice(index, 1);\n\n        while (child.children.length > 0) {\n            child.removeChild(child.children[child.children.length - 1]);\n        }\n\n        if (child.dispose) {\n            child.dispose();\n        }\n    };\n\n    this.dispose = function() {\n        if (this.cmp && this.cmp.dispose) {\n            this.cmp.dispose();\n        }\n    };\n}\n\nmodule.exports = Node;\n","const ComponentManager = () => {\n    let _lastId = 0;\n    const _cache = {};\n    const validateId = componentId => {\n        if (!componentId) {\n            throw new Error(\"No id was provided\");\n        }\n\n        const id = parseInt(componentId);\n\n        if (!id || id > _lastId) {\n            throw new Error(\"Invalid id\");\n        }\n    };\n\n    const newId = () => (++_lastId).toString();\n    const save = (componentId, component) => {\n        validateId(componentId);\n        if (component) {\n            _cache[componentId] = component;\n        } else {\n            delete _cache[componentId];\n        }\n    };\n    const get = componentId => {\n        validateId(componentId);\n        return _cache[componentId];\n    };\n\n    return {\n        newId,\n        save,\n        get,\n    };\n};\n\nmodule.exports = { create: ComponentManager };\n","const { compose } = require(\"./helpers/composer\");\nconst propertyUpdater = require(\"./helpers/property-updater\");\nconst { fromPairs } = require(\"./helpers/functional\");\n\nconst styles = {\n    standardMaterial: props => ({ type: \"standardMaterial\", props }),\n    shaderMaterial: props => ({ type: \"shaderMaterial\", props }),\n    texture: props => ({ type: \"texture\", props }),\n    cubeTexture: props => ({ type: \"cubeTexture\", props }),\n};\n\nconst byType = fromPairs(\n    [\n        require(\"./components/component-scene\"),\n        require(\"./components/component-mesh-box\"),\n        require(\"./components/component-mesh-ground\"),\n        require(\"./components/component-mesh-cylinder\"),\n        require(\"./components/component-mesh-extrude-shape\"),\n        require(\"./components/component-mesh-lines\"),\n\n        require(\"./components/component-mesh-sphere\"),\n        require(\"./components/component-free-camera\"),\n        require(\"./components/component-arc-rotate-camera\"),\n\n        require(\"./components/component-hemispheric-light\"),\n\n        require(\"./styles/style-shader-material\"),\n        require(\"./styles/style-standard-material\"),\n\n        require(\"./styles/style-texture\"),\n        require(\"./styles/style-cube-texture\"),\n    ].map(({ type, props, createComponent }) => [\n        type,\n        compose(type, { props, createComponent }, propertyUpdater(type, props)),\n    ])\n);\n\nmodule.exports = { styles, byType };\n","const { clone, equals } = require(\"./utils\");\n\nconst shouldCreateNewComponent = propsDefinitions => {\n    const defs = Object.keys(propsDefinitions)\n        .filter(def => propsDefinitions[def].newComponentRequired)\n        .reduce((acc, key) => Object.assign(acc, { [key]: true }), {});\n\n    return (props, currentProps) => {\n        for (let prop in props) {\n            if (defs[prop] && !equals(currentProps[prop], props[prop])) {\n                return true;\n            }\n        }\n        return false;\n    };\n};\n\nconst validateComponent = (type, definition, updater) => {\n    if (!type) {\n        throw new Error(\"Component's type is required\");\n    }\n\n    if (!definition) {\n        throw new Error(\"Component's definition is required\");\n    }\n\n    if (!definition.createComponent) {\n        throw new Error(\n            \"Component's definition's must have a property createComponent\"\n        );\n    }\n\n    if (!updater) {\n        throw new Error(\"Updater is required\");\n    }\n};\n\nconst compose = (type, definition, updater) => {\n    validateComponent(type, definition, updater);\n\n    const definitionProps = Object.assign({}, definition.props);\n\n    const requireNewComponent = shouldCreateNewComponent(definitionProps);\n\n    const creator = (context, providedProps) => {\n        const props = clone(providedProps);\n\n        let componentId;\n        let baseComponent;\n\n        const getComponent = () => baseComponent;\n        const internalCreateComponent = () => {\n            const tmpProps = clone(props);\n            if (baseComponent) {\n                baseComponent.dispose();\n            }\n            baseComponent = definition.createComponent(context, tmpProps);\n        };\n\n        internalCreateComponent();\n\n        const instance = {\n            getComponent,\n            updateProps: values => {\n                const createNewComponent = requireNewComponent(values, props);\n\n                Object.assign(props, clone(values));\n\n                if (createNewComponent === true) {\n                    internalCreateComponent();\n                    return;\n                }\n                updater(context, getComponent(), clone(values), componentId);\n            },\n            dispose: () => {\n                // TODO: come up with a better way of doing it\n                if (type === \"scene\") {\n                    return;\n                }\n                updater.dispose(context, getComponent(), props, componentId);\n                getComponent().dispose();\n            },\n        };\n\n        componentId = context.componentManager.newId(instance);\n        updater(context, getComponent(), clone(props), componentId);\n        return instance;\n    };\n\n    creator.type = type;\n\n    return creator;\n};\n\nmodule.exports = { compose };\n","const equals = (a, b) => {\n    if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n\n        for (let i = 0; i < a.length; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    if (typeof a === \"object\" && typeof b === \"object\") {\n        for (let key in a) {\n            if (equals(a[key], b[key]) === false) {\n                return false;\n            }\n        }\n\n        for (let key in b) {\n            if (equals(a[key], b[key]) === false) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    return a === b;\n};\n\nconst clone = obj => {\n    if (Array.isArray(obj)) {\n        return obj.slice(0);\n    }\n\n    if (obj instanceof Date) {\n        return new Date(obj);\n    }\n\n    if (typeof obj !== \"object\") {\n        return obj.valueOf();\n    }\n\n    const newObj = Object.assign({}, obj);\n\n    for (let key in obj) {\n        newObj[key] = clone(obj[key]);\n    }\n\n    return newObj;\n};\n\nmodule.exports = { clone, equals };\n","const getValue = (transformer, propValue, propName, componentId, context) => {\n    if (!transformer) {\n        return propValue;\n    }\n\n    if (!transformer.needLastReturned) {\n        return transformer(context, propValue);\n    }\n\n    const keyComponent = `${componentId}::${propName}`;\n    const value = transformer(\n        context,\n        propValue,\n        context.componentManager.get(keyComponent)\n    );\n    context.componentManager.save(keyComponent, value);\n    return value;\n};\n\nconst propertyUpdater = (type, propsDefinition) => {\n    const updater = (context, component, props, componentId) =>\n        Object.keys(props).forEach(propName => {\n            if (!propsDefinition[propName]) {\n                context.logger.warn(\n                    `property [${propName}] is not defined for the component <${type}>`\n                );\n                return;\n            }\n\n            if (propsDefinition[propName].newComponentRequired === true) {\n                return;\n            }\n\n            const { transformer, setter } = propsDefinition[propName];\n\n            const value = getValue(\n                transformer,\n                props[propName],\n                propName,\n                componentId,\n                context\n            );\n\n            setter(component, value);\n        });\n\n    updater.dispose = (context, component, props, componentId) => {\n        Object.keys(propsDefinition).forEach(propName => {\n            const prop = propsDefinition[propName];\n            if (prop.dispose) {\n                const keyComponent = `${componentId}::${propName}`;\n                prop.dispose(\n                    component,\n                    context.componentManager.get(keyComponent),\n                    propsDefinition[propName].setter\n                );\n            }\n        });\n    };\n    return updater;\n};\n\nmodule.exports = propertyUpdater;\n","const transformers = require(\"../helpers/property-transformers\");\nconst setters = require(\"../helpers/property-setters\");\n\nconst createComponent = ({ scene }) => {\n    return scene;\n};\n\nconst props = {\n    clearColor: {\n        setter: setters.property(\"clearColor\"),\n        transformer: transformers.vector3,\n    },\n    ambientColor: {\n        setter: setters.property(\"ambientColor\"),\n        transformer: transformers.vector3,\n    },\n\n};\n\nconst scene = { type: \"scene\", createComponent, props };\n\nmodule.exports = scene;\n","const disposers = require(\"../helpers/property-disposers\");\nconst setters = require(\"../helpers/property-setters\");\nconst transformers = require(\"../helpers/property-transformers\");\n\nconst createComponent = ({ BABYLON, scene }, props) => {\n    const component = new BABYLON.Mesh.CreateBox(props.name, props.size, scene);\n    return component;\n};\n\nconst props = {\n    name: {\n        setter: setters.property(\"name\"),\n    },\n    size: { newComponentRequired: true },\n    infiniteDistance: {\n        setter: setters.property(\"infiniteDistance\"),\n    },\n    width: { setter: setters.property(\"width\") },\n    height: { setter: setters.property(\"height\") },\n    subdivisions: { setter: setters.property(\"subdivisions\") },\n    material: {\n        setter: setters.propertyFromComponent(\"material\"),\n        transformer: transformers.component,\n        dispose: disposers.component,\n    },\n    position: {\n        setter: setters.property(\"position\"),\n        transform: transformers.vector3,\n    },\n};\n\nconst box = { type: \"box\", createComponent, props };\nmodule.exports = box;\n","const disposers = require(\"../helpers/property-disposers\");\nconst setters = require(\"../helpers/property-setters\");\nconst transformers = require(\"../helpers/property-transformers\");\n\nconst createComponent = ({ BABYLON, scene }, props) => {\n    const component = BABYLON.Mesh.CreateGround(\n        props.name,\n        props.width,\n        props.height,\n        props.subdivisions,\n        scene\n    );\n    return component;\n};\n\nconst props = {\n    name: {\n        setter: setters.property(\"name\"),\n    },\n    width: { newComponentRequired: true },\n    height: { newComponentRequired: true },\n    subdivisions: { newComponentRequired: true },\n    position: {\n        setter: setters.property(\"position\"),\n        transformer: transformers.vector3,\n    },\n    material: {\n        setter: setters.propertyFromComponent(\"material\"),\n        transformer: transformers.component,\n        dispose: disposers.component,\n    },\n};\n\nconst ground = { type: \"ground\", createComponent, props };\nmodule.exports = ground;\n","const disposers = require(\"../helpers/property-disposers\");\nconst setters = require(\"../helpers/property-setters\");\nconst transformers = require(\"../helpers/property-transformers\");\nconst { fromPairs } = require(\"../helpers/functional\");\n\n// TODO: improve performance\nconst getOpts = (context, values) =>\n    fromPairs(\n        Object.keys(values)\n            .map(key => ({ def: props[key], value: values[key], key }))\n            .filter(\n                ({ def }) => def && def.newComponentRequired && def.transformer\n            )\n            .map(({ def, value, key }) => [\n                key,\n                def.transformer(context, value),\n            ])\n    );\n\nconst createComponent = (context, values) => {\n    const { BABYLON, scene } = context;\n    const opts = getOpts(context, values);\n\n    const component = BABYLON.MeshBuilder.CreateCylinder(\n        values.name,\n        opts,\n        scene\n    );\n    return component;\n};\n\nconst props = {\n    height: {\n        newComponentRequired: true,\n        transformer: transformers.byPass,\n    },\n    diameterTop: {\n        newComponentRequired: true,\n        transformer: transformers.byPass,\n    },\n    diameterBottom: {\n        newComponentRequired: true,\n        transformer: transformers.byPass,\n    },\n    tessellation: {\n        newComponentRequired: true,\n        transformer: transformers.byPass,\n    },\n    subdivisions: {\n        newComponentRequired: true,\n        transformer: transformers.byPass,\n    },\n    arc: {\n        newComponentRequired: true,\n        transformer: transformers.byPass,\n        // transformer: transformers.enum(\n        //     BABYLON.Mesh.DOUBLESIDE,\n        //     BABYLON.Mesh.DEFAULTSIDE\n        // ),\n    },\n    sideOrientation: {\n        newComponentRequired: true,\n        transformer: transformers.byPass,\n    },\n    faceColors: {\n        newComponentRequired: true,\n        transformer: transformers.arrayOf(transformers.color3),\n    },\n    faceUV: {\n        newComponentRequired: true,\n        transformer: transformers.arrayOf(transformers.vector4),\n    },\n    frontUVs: {\n        newComponentRequired: true,\n        transformer: transformers.vector4,\n    },\n    backUVs: {\n        newComponentRequired: true,\n        transformer: transformers.vector4,\n    },\n    position: {\n        setter: setters.property(\"position\"),\n        transformer: transformers.vector3,\n    },\n    rotation: {\n        setter: setters.property(\"rotation\"),\n        transformer: transformers.vector3,\n    },\n    material: {\n        setter: setters.propertyFromComponent(\"material\"),\n        transformer: transformers.component,\n        dispose: disposers.component,\n    },\n};\n\nconst sphere = { type: \"cylinder\", createComponent, props };\nmodule.exports = sphere;\n","const disposers = require(\"../helpers/property-disposers\");\nconst setters = require(\"../helpers/property-setters\");\nconst transformers = require(\"../helpers/property-transformers\");\nconst { fromPairs } = require(\"../helpers/functional\");\n\n// TODO: improve performance\nconst getOpts = (context, values) =>\n    fromPairs(\n        Object.keys(values)\n            .map(key => ({ def: props[key], value: values[key], key }))\n            .filter(\n                ({ def }) => def && def.newComponentRequired && def.transformer\n            )\n            .map(({ def, value, key }) => [\n                key,\n                def.transformer(context, value),\n            ])\n    );\n\nconst createComponent = (context, values) => {\n    const { BABYLON, scene } = context;\n    const opts = getOpts(context, values);\n\n    const component = BABYLON.MeshBuilder.ExtrudeShape(\n        values.name,\n        opts,\n        scene\n    );\n    return component;\n};\n\nconst props = {\n    shape: {\n        newComponentRequired: true,\n        transformer: transformers.arrayOf(transformers.vector3),\n    },\n    path: {\n        newComponentRequired: true,\n        transformer: transformers.arrayOf(transformers.vector3),\n    },\n    scale: {\n        newComponentRequired: true,\n        transformer: transformers.byPass,\n    },\n    cap: {\n        newComponentRequired: true,\n        transformer: transformers.byPass,\n        // TODO: enum type\n        /*\n        transformers.enum(({ BABYLON }) => [\n            BABYLON.Mesh.NO_CAP,\n            BABYLON.Mesh.CAP_START,\n            BABYLON.Mesh.CAP_END,\n            BABYLON.Mesh.CAP_ALL,\n        ]) */\n    },\n    sideOrientation: {\n        newComponentRequired: true,\n        transformer: transformers.byPass,\n        /*\n        // TODO: enum type\n        transformers.enum(\n            BABYLON.Mesh.DOUBLESIDE,\n            BABYLON.Mesh.DEFAULTSIDE\n        ),\n        */\n    },\n    frontUVs: {\n        newComponentRequired: true,\n        transformer: transformers.arrayOf(transformers.vector4),\n    },\n    backUVs: {\n        newComponentRequired: true,\n        transformer: transformers.vector4,\n    },\n    invertUV: {\n        newComponentRequired: true,\n        transformer: transformers.byPass,\n    },\n    // TODO:\n    // instance:{}\n    material: {\n        setter: setters.propertyFromComponent(\"material\"),\n        transformer: transformers.component,\n        dispose: disposers.component,\n    },\n};\n\nconst extrudeShape = { type: \"extrudeShape\", createComponent, props };\nmodule.exports = extrudeShape;\n","const setters = require(\"../helpers/property-setters\");\nconst transformers = require(\"../helpers/property-transformers\");\nconst { fromPairs } = require(\"../helpers/functional\");\n\n// TODO: improve performance\nconst getOpts = (context, values) =>\n    fromPairs(\n        Object.keys(values)\n            .map(key => ({ def: props[key], value: values[key], key }))\n            .filter(\n                ({ def }) => def && def.newComponentRequired && def.transformer\n            )\n            .map(({ def, value, key }) => [\n                key,\n                def.transformer(context, value),\n            ])\n    );\n\nconst createComponent = (context, values) => {\n    const { BABYLON, scene } = context;\n    const opts = getOpts(context, values);\n    const component = BABYLON.MeshBuilder.CreateLines(values.name, opts, scene);\n    return component;\n};\n\nconst props = {\n    points: {\n        newComponentRequired: true,\n        transformer: transformers.arrayOf(transformers.vector3),\n    },\n    colors: {\n        newComponentRequired: true,\n        transformer: transformers.arrayOf(transformers.color4),\n    },\n    color: {\n        setter: setters.property(\"color\"),\n        transformer: transformers.color3,\n    },\n    useVertexColor: {\n        newComponentRequired: true,\n        transformer: transformers.byPass,\n    },\n};\n\nconst sphere = { type: \"lines\", createComponent, props };\nmodule.exports = sphere;\n","const disposers = require(\"../helpers/property-disposers\");\nconst setters = require(\"../helpers/property-setters\");\nconst transformers = require(\"../helpers/property-transformers\");\n\nconst createComponent = ({ BABYLON, scene }, props) => {\n    const component = BABYLON.Mesh.CreateSphere(\n        props.name,\n        props.segments,\n        props.diameter,\n        scene\n    );\n    return component;\n};\n\nconst props = {\n    segments: { newComponentRequired: true },\n    diameter: { newComponentRequired: true },\n    infiniteDistance: { setter: setters.property(\"infiniteDistance\") },\n    position: {\n        setter: setters.property(\"position\"),\n        transformer: transformers.vector3,\n    },\n    material: {\n        setter: setters.propertyFromComponent(\"material\"),\n        transformer: transformers.component,\n        dispose: disposers.component,\n    },\n};\n\nconst sphere = { type: \"sphere\", createComponent, props };\nmodule.exports = sphere;\n","const transformers = require(\"../helpers/property-transformers\");\nconst setters = require(\"../helpers/property-setters\");\n\nconst createComponent = ({ BABYLON, scene }, props) => {\n    const component = new BABYLON.FreeCamera(\n        props.name,\n        new BABYLON.Vector3(...props.position),\n        scene\n    );\n    scene.activeCamera = component;\n    if (props.defaultTarget) {\n        component.setTarget(new BABYLON.Vector3(...props.defaultTarget));\n    }\n    return component;\n};\n\nconst props = {\n    position: { newComponentRequired: true },\n    defaultTarget: { newComponentRequired: true },\n    target: {\n        setter: (component, value) => component.setTarget(value),\n        transformer: transformers.vector3,\n    },\n    attachControl: {\n        setter: setters.apply,\n        transformer: (context, value) => {\n            if (value === true) {\n                return component =>\n                    component.attachControl(context.canvas, true);\n            }\n            return component => component.detachControl(context.canvas);\n        },\n    },\n};\n\nconst freeCamera = { type: \"freeCamera\", createComponent, props };\n\nmodule.exports = freeCamera;\n","const transformers = require(\"../helpers/property-transformers\");\nconst setters = require(\"../helpers/property-setters\");\n\nconst createComponent = ({ BABYLON, scene }, props) => {\n    const component = new BABYLON.ArcRotateCamera(\n        props.name,\n        props.alpha,\n        props.beta,\n        props.radius,\n        new BABYLON.Vector3(...props.target),\n        scene\n    );\n\n    scene.activeCamera = component;\n\n    return component;\n};\n\nconst props = {\n    alpha: { newComponentRequired: true },\n    beta: { newComponentRequired: true },\n    radius: { newComponentRequired: true },\n    target: {\n        setter: (component, value) => component.setTarget(value),\n        transformer: transformers.vector3,\n    },\n    position: {\n        setter: (component, value) => component.setPosition(value),\n        transformer: transformers.vector3,\n    },\n    attachControl: {\n        setter: setters.apply,\n        transformer: (context, value) => {\n            if (value === true) {\n                return component =>\n                    component.attachControl(context.canvas, true);\n            }\n            return component => component.detachControl(context.canvas);\n        },\n    },\n};\n\nconst arcRotateCamera = { type: \"arcRotateCamera\", createComponent, props };\n\nmodule.exports = arcRotateCamera;\n","const setters = require(\"../helpers/property-setters\");\n\nconst createComponent = ({ BABYLON, scene }, props) => {\n    const component = new BABYLON.HemisphericLight(\n        props.name,\n        new BABYLON.Vector3(...props.target),\n        scene\n    );\n    return component;\n};\n\nconst props = {\n    target: { newComponentRequired: true },\n    intensity: { setter: setters.property(\"intensity\") },\n    name: { setter: setters.property(\"name\") },\n};\n\nconst hemisphericLight = { type: \"hemisphericLight\", createComponent, props };\nmodule.exports = hemisphericLight;\n","const disposers = require(\"../helpers/property-disposers\");\nconst setters = require(\"../helpers/property-setters\");\nconst transformers = require(\"../helpers/property-transformers\");\n\nconst createComponent = ({ BABYLON, scene }, props) => {\n    const component = new BABYLON.ShaderMaterial(\n        props.name,\n        scene,\n        props.shaderPath,\n        {\n            attributes: Array.from(props.attributes || []),\n            uniforms: Array.from(props.uniforms || []),\n        }\n    );\n    return component;\n};\n\nconst props = {\n    name: {\n        setter: setters.property(\"name\"),\n    },\n    shaderPath: { newComponentRequired: true },\n    attributes: { newComponentRequired: true },\n    uniforms: { newComponentRequired: true },\n\n    diffuseColor: {\n        setter: setters.property(\"diffuseColor\"),\n        transformer: transformers.vector3,\n    },\n    backFaceCulling: { setter: setters.property(\"backFaceCulling\") },\n\n    width: { setter: setters.setFloat(\"width\") },\n    height: { setter: setters.setFloat(\"height\") },\n    boxSize: { setter: setters.setFloat(\"boxSize\") },\n    edgeColor: {\n        setter: setters.setVector4(\"edgeColor\"),\n        transformer: transformers.vector4,\n    },\n    hue: {\n        setter: setters.setVector4(\"hue\"),\n        transformer: transformers.vector4,\n    },\n\n    tileTex: {\n        setter: setters.setTexture(\"tileTex\"),\n        transformer: transformers.component,\n        dispose: disposers.component,\n    },\n};\n\nconst shaderMaterial = {\n    superTypes: [\"material\"],\n    type: \"shaderMaterial\",\n    createComponent,\n    props,\n};\n\nmodule.exports = shaderMaterial;\n","const disposers = require(\"../helpers/property-disposers\");\nconst setters = require(\"../helpers/property-setters\");\nconst transformers = require(\"../helpers/property-transformers\");\n\nconst createComponent = ({ BABYLON, scene }, props) => {\n    const component = new BABYLON.StandardMaterial(props.name, scene);\n    return component;\n};\n\nconst props = {\n    name: { setter: setters.property(\"name\") },\n    backFaceCulling: { setter: setters.property(\"backFaceCulling\") },\n    diffuseColor: {\n        setter: setters.property(\"diffuseColor\"),\n        transformer: transformers.vector3,\n    },\n\n    specularColor: {\n        setter: setters.property(\"specularColor\"),\n        transformer: transformers.vector3,\n    },\n    emissiveColor: {\n        setter: setters.property(\"emissiveColor\"),\n        transformer: transformers.vector3,\n    },\n    ambientColor: {\n        setter: setters.property(\"ambientColor\"),\n        transformer: transformers.vector3,\n    },\n\n    reflectionTexture: {\n        setter: setters.propertyFromComponent(\"reflectionTexture\"),\n        transformer: transformers.component,\n        dispose: disposers.component,\n    },\n\n    diffuseTexture: {\n        setter: setters.propertyFromComponent(\"diffuseTexture\"),\n        transformer: transformers.component,\n        dispose: disposers.component,\n    },\n};\n\nconst standardMaterial = {\n    superTypes: [\"material\"],\n    type: \"standardMaterial\",\n    createComponent,\n    props,\n};\n\nmodule.exports = standardMaterial;\n","const createComponent = ({ BABYLON, scene }, props) => {\n    const component = new BABYLON.Texture(props.url, scene);\n    return component;\n};\n\nconst props = {\n    url: { newComponentRequired: true },\n};\n\nconst texture = {\n    superTypes: [\"texture\"],\n    type: \"texture\",\n    createComponent,\n    props,\n};\n\nmodule.exports = texture;\n","const setters = require(\"../helpers/property-setters\");\n\nconst createComponent = ({ BABYLON, scene }, props) => {\n    const component = new BABYLON.CubeTexture(props.url, scene);\n    return component;\n};\n\nconst props = {\n    url: { newComponentRequired: true },\n    coordinatesMode: {\n        setter: setters.property(\"coordinatesMode\"),\n    },\n};\n\nconst cubeTexture = {\n    superTypes: [\"cubeTexture\"],\n    type: \"cubeTexture\",\n    createComponent,\n    props,\n};\n\nmodule.exports = cubeTexture;\n"],"sourceRoot":""}